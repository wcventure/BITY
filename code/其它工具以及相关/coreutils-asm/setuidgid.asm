;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-B611-7234-BB			    |
; |		Doskey Lee, Kingsoft Internet Security Software		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	D537C45DCCBE314C8C1D0D392DABF7F6
; Input	CRC32 :	42451D1B

; File Name   :	D:\coreutils-o\setuidgid.o
; Format      :	ELF for	Intel 386 (Relocatable)
;
; Source File :	'setuidgid.c'

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	byte public 'CODE' use32
		assume cs:_text
		;org 8000000h
		assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: static bp-based frame

; void __cdecl initialize_exit_failure(int status)
initialize_exit_failure	proc near	; CODE XREF: main+88p

status		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		cmp	[ebp+status], 1
		jz	short loc_8000011
		mov	eax, [ebp+status]
		mov	ds:exit_failure, eax

loc_8000011:				; CODE XREF: initialize_exit_failure+7j
		nop
		pop	ebp
		retn
initialize_exit_failure	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: static bp-based frame

; void emit_ancillary_info()
emit_ancillary_info proc near		; CODE XREF: usage+F1p

lc_messages	= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	eax, ds:program_name
		sub	esp, 0Ch
		push	eax
		call	last_component
		add	esp, 10h
		mov	ebx, eax
		sub	esp, 0Ch
		push	offset msgid	; "\nReport %s bugs to %s\n"
		call	gettext
		add	esp, 10h
		sub	esp, 4
		push	offset aBugCoreutils@g ; "bug-coreutils@gnu.org"
		push	ebx
		push	eax		; format
		call	printf
		add	esp, 10h
		sub	esp, 0Ch
		push	offset aSHomePageHttpW ; "%s home page:	<http://www.gnu.org/softw"...
		call	gettext
		add	esp, 10h
		sub	esp, 4
		push	offset domainname ; "coreutils"
		push	offset aGnuCoreutils ; "GNU coreutils"
		push	eax		; format
		call	printf
		add	esp, 10h
		mov	ebx, ds:stdout
		sub	esp, 0Ch
		push	offset aGeneralHelpUsi ; "General help using GNU software: <http:"...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax
		call	fputs_unlocked
		add	esp, 10h
		sub	esp, 8
		push	0		; locale
		push	5		; category
		call	setlocale
		add	esp, 10h
		mov	[ebp+lc_messages], eax
		cmp	[ebp+lc_messages], 0
		jz	short loc_80000FA
		sub	esp, 4
		push	3		; n
		push	offset s2	; "en_"
		push	[ebp+lc_messages] ; s1
		call	strncmp
		add	esp, 10h
		test	eax, eax
		jz	short loc_80000FA
		mov	eax, ds:program_name
		sub	esp, 0Ch
		push	eax
		call	last_component
		add	esp, 10h
		mov	ebx, eax
		sub	esp, 0Ch
		push	offset aReportSTransla ; "Report %s translation	bugs to	<http://t"...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax		; format
		call	printf
		add	esp, 10h

loc_80000FA:				; CODE XREF: emit_ancillary_info+9Bj
					; emit_ancillary_info+B4j
		mov	eax, ds:program_name
		sub	esp, 0Ch
		push	eax
		call	last_component
		add	esp, 10h
		mov	ebx, eax
		sub	esp, 0Ch
		push	offset aForCompleteDoc ; "For complete documentation, run: info	c"...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax		; format
		call	printf
		add	esp, 10h
		nop
		mov	ebx, [ebp+var_4]
		leave
		retn
emit_ancillary_info endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

; void __cdecl usage(int status)
		public usage
usage		proc near		; CODE XREF: main+1ACp	main+1C8p ...

status		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		cmp	[ebp+status], 0
		jz	short loc_800016B
		mov	ebx, ds:program_name
		sub	esp, 0Ch
		push	offset aTrySHelpForMor ; "Try `%s --help' for more information.\n"
		call	gettext
		add	esp, 10h
		mov	edx, eax
		mov	eax, ds:stderr
		sub	esp, 4
		push	ebx
		push	edx		; format
		push	eax		; stream
		call	fprintf
		add	esp, 10h
		jmp	loc_8000226
; ---------------------------------------------------------------------------

loc_800016B:				; CODE XREF: usage+9j
		mov	esi, ds:program_name
		mov	ebx, ds:program_name
		sub	esp, 0Ch
		push	offset aUsageSShortOpt ; "Usage: %s [SHORT-OPTION]... USER COMMAN"...
		call	gettext
		add	esp, 10h
		sub	esp, 4
		push	esi
		push	ebx
		push	eax		; format
		call	printf
		add	esp, 10h
		mov	ebx, ds:stdout
		sub	esp, 0Ch
		push	offset aDropAnySupplem ; "Drop any supplemental	groups,	assume th"...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax
		call	fputs_unlocked
		add	esp, 10h
		mov	ebx, ds:stdout
		sub	esp, 0Ch
		push	offset aGGidGid1___Als ; "  -g GID[,GID1...]  also set the primar"...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax
		call	fputs_unlocked
		add	esp, 10h
		mov	ebx, ds:stdout
		sub	esp, 0Ch
		push	offset aHelpDisplayThi ; "	--help	   display this	help and "...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax
		call	fputs_unlocked
		add	esp, 10h
		mov	ebx, ds:stdout
		sub	esp, 0Ch
		push	offset aVersionOutputV ; "	--version  output version informa"...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax
		call	fputs_unlocked
		add	esp, 10h
		call	emit_ancillary_info

loc_8000226:				; CODE XREF: usage+36j
		sub	esp, 0Ch
		push	[ebp+status]	; status
		call	exit
usage		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

; int __cdecl main(int argc, const char	**argv,	const char **envp)
		public main
main		proc near

argv		= dword	ptr -5Ch
have_uid	= byte ptr -55h
gids		= dword	ptr -54h
n_gids_allocated= dword	ptr -50h
tmp_ul		= dword	ptr -4Ch
ptr		= dword	ptr -48h
uid		= dword	ptr -44h
n_gids		= dword	ptr -40h
gr		= dword	ptr -3Ch
pwd		= dword	ptr -38h
c		= dword	ptr -34h
user		= dword	ptr -30h
n		= dword	ptr -2Ch
primary_gid	= dword	ptr -28h
cmd		= dword	ptr -24h
exit_status	= dword	ptr -20h
var_1C		= dword	ptr -1Ch
argc		= dword	ptr  0Ch
envp		= dword	ptr  14h

		lea	ecx, [esp+4]
		and	esp, 0FFFFFFF0h
		push	dword ptr [ecx-4]
		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		push	ecx
		sub	esp, 5Ch
		mov	ebx, ecx
		mov	eax, [ebx+4]
		mov	[ebp+argv], eax
		mov	eax, large gs:14h
		mov	[ebp+var_1C], eax
		xor	eax, eax
		mov	[ebp+gids], 0
		mov	[ebp+n_gids], 0
		mov	[ebp+n_gids_allocated],	0
		mov	eax, [ebp+argv]
		mov	eax, [eax]
		sub	esp, 0Ch
		push	eax
		call	set_program_name
		add	esp, 10h
		sub	esp, 8
		push	offset locale	; locale
		push	6		; category
		call	setlocale
		add	esp, 10h
		sub	esp, 8
		push	offset dirname	; "/usr/local/share/locale"
		push	offset domainname ; "coreutils"
		call	bindtextdomain
		add	esp, 10h
		sub	esp, 0Ch
		push	offset domainname ; "coreutils"
		call	textdomain
		add	esp, 10h
		sub	esp, 0Ch
		push	6Fh		; status
		call	initialize_exit_failure
		add	esp, 10h
		sub	esp, 0Ch
		push	offset close_stdout ; func
		call	atexit
		add	esp, 10h
		mov	eax, ds:Version
		push	0
		push	offset aJimMeyering ; "Jim Meyering"
		push	offset usage
		push	eax
		push	offset aGnuCoreutils ; "GNU coreutils"
		push	offset aSetuidgid ; "setuidgid"
		push	[ebp+argv]
		push	dword ptr [ebx]
		call	parse_long_options
		add	esp, 20h
		jmp	loc_80003FE
; ---------------------------------------------------------------------------

loc_80002FF:				; CODE XREF: main+1EDj
		mov	eax, [ebp+c]
		cmp	eax, 67h
		jnz	loc_80003F4
		mov	eax, ds:optarg
		mov	[ebp+gr], eax

loc_8000313:				; CODE XREF: main+1BAj
		sub	esp, 0Ch
		push	0
		lea	eax, [ebp+tmp_ul]
		push	eax
		push	0Ah
		lea	eax, [ebp+ptr]
		push	eax
		push	[ebp+gr]
		call	xstrtoul
		add	esp, 20h
		test	eax, eax
		jz	short loc_800035F
		sub	esp, 0Ch
		push	[ebp+gr]
		call	quote
		add	esp, 10h
		mov	esi, eax
		sub	esp, 0Ch
		push	offset aInvalidGroupS ;	"invalid group %s"
		call	gettext
		add	esp, 10h
		push	esi
		push	eax		; format
		push	0		; errnum
		push	1		; status
		call	error
		add	esp, 10h

loc_800035F:				; CODE XREF: main+FEj
		mov	eax, [ebp+n_gids_allocated]
		cmp	[ebp+n_gids], eax
		jnz	short loc_800037F
		mov	eax, [ebp+gids]
		sub	esp, 4
		push	4
		lea	edx, [ebp+n_gids_allocated]
		push	edx
		push	eax
		call	x2nrealloc
		add	esp, 10h
		mov	[ebp+gids], eax

loc_800037F:				; CODE XREF: main+134j
		mov	ecx, [ebp+gids]
		mov	eax, [ebp+n_gids]
		lea	edx, [eax+1]
		mov	[ebp+n_gids], edx
		shl	eax, 2
		lea	edx, [ecx+eax]
		mov	eax, [ebp+tmp_ul]
		mov	[edx], eax
		mov	eax, [ebp+ptr]
		movzx	eax, byte ptr [eax]
		test	al, al
		jz	short loc_80003F0
		mov	eax, [ebp+ptr]
		movzx	eax, byte ptr [eax]
		cmp	al, 2Ch
		jz	short loc_80003E2
		sub	esp, 0Ch
		push	[ebp+gr]
		call	quote
		add	esp, 10h
		mov	ebx, eax
		sub	esp, 0Ch
		push	offset aInvalidGroupS ;	"invalid group %s"
		call	gettext
		add	esp, 10h
		push	ebx
		push	eax		; format
		push	0		; errnum
		push	0		; status
		call	error
		add	esp, 10h
		sub	esp, 0Ch
		push	6Fh		; status
		call	usage
; ---------------------------------------------------------------------------

loc_80003E2:				; CODE XREF: main+177j
		mov	eax, [ebp+ptr]
		add	eax, 1
		mov	[ebp+gr], eax
		jmp	loc_8000313
; ---------------------------------------------------------------------------

loc_80003F0:				; CODE XREF: main+16Dj
		nop
		nop
		jmp	short loc_80003FE
; ---------------------------------------------------------------------------

loc_80003F4:				; CODE XREF: main+D4j
		sub	esp, 0Ch
		push	6Fh		; status
		call	usage
; ---------------------------------------------------------------------------

loc_80003FE:				; CODE XREF: main+C9j main+1C1j
		sub	esp, 0Ch
		push	0		; longind
		push	0		; longopts
		push	offset shortopts ; "+g:"
		push	[ebp+argv]	; argv
		push	dword ptr [ebx]	; argc
		call	getopt_long
		add	esp, 20h
		mov	[ebp+c], eax
		cmp	[ebp+c], 0FFFFFFFFh
		jnz	loc_80002FF
		mov	eax, ds:optind
		add	eax, 1
		cmp	eax, [ebx]
		jl	short loc_80004A7
		mov	eax, ds:optind
		add	eax, 1
		cmp	eax, [ebx]
		jle	short loc_800045E
		sub	esp, 0Ch
		push	offset aMissingOperand ; "missing operand"
		call	gettext
		add	esp, 10h
		sub	esp, 4
		push	eax		; format
		push	0		; errnum
		push	0		; status
		call	error
		add	esp, 10h
		jmp	short loc_800049D
; ---------------------------------------------------------------------------

loc_800045E:				; CODE XREF: main+209j
		mov	eax, ds:optind
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+argv]
		add	eax, edx
		mov	eax, [eax]
		sub	esp, 0Ch
		push	eax
		call	quote
		add	esp, 10h
		mov	ebx, eax
		sub	esp, 0Ch
		push	offset aMissingOpera_0 ; "missing operand after	%s"
		call	gettext
		add	esp, 10h
		push	ebx
		push	eax		; format
		push	0		; errnum
		push	0		; status
		call	error
		add	esp, 10h

loc_800049D:				; CODE XREF: main+22Bj
		sub	esp, 0Ch
		push	6Fh		; status
		call	usage
; ---------------------------------------------------------------------------

loc_80004A7:				; CODE XREF: main+1FDj
		mov	eax, ds:optind
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+argv]
		add	eax, edx
		mov	eax, [eax]
		mov	[ebp+user], eax
		mov	[ebp+have_uid],	0
		sub	esp, 0Ch
		push	offset locale
		lea	eax, [ebp+tmp_ul]
		push	eax
		push	0Ah
		lea	eax, [ebp+ptr]
		push	eax
		push	[ebp+user]
		call	xstrtoul
		add	esp, 20h
		test	eax, eax
		jnz	short loc_80004EC
		mov	eax, [ebp+tmp_ul]
		mov	[ebp+uid], eax
		mov	[ebp+have_uid],	1

loc_80004EC:				; CODE XREF: main+2AFj
		movzx	eax, [ebp+have_uid]
		xor	eax, 1
		test	al, al
		jz	short loc_8000559
		sub	esp, 0Ch
		push	[ebp+user]	; name
		call	getpwnam
		add	esp, 10h
		mov	[ebp+pwd], eax
		cmp	[ebp+pwd], 0
		jnz	short loc_800054E
		sub	esp, 0Ch
		push	[ebp+user]
		call	quote
		add	esp, 10h
		mov	esi, eax
		sub	esp, 0Ch
		push	offset aUnknownUserIdS ; "unknown user-ID: %s"
		call	gettext
		add	esp, 10h
		mov	ebx, eax
		call	__errno_location
		mov	eax, [eax]
		push	esi
		push	ebx		; format
		push	eax		; errnum
		push	6Fh		; status
		call	error
		add	esp, 10h
		sub	esp, 0Ch
		push	6Fh		; status
		call	usage
; ---------------------------------------------------------------------------

loc_800054E:				; CODE XREF: main+2DBj
		mov	eax, [ebp+pwd]
		mov	eax, [eax+8]
		mov	[ebp+uid], eax
		jmp	short loc_80005B6
; ---------------------------------------------------------------------------

loc_8000559:				; CODE XREF: main+2C4j
		cmp	[ebp+n_gids], 0
		jnz	short loc_80005B6
		sub	esp, 0Ch
		push	[ebp+uid]	; uid
		call	getpwuid
		add	esp, 10h
		mov	[ebp+pwd], eax
		cmp	[ebp+pwd], 0
		jnz	short loc_80005B6
		sub	esp, 0Ch
		push	[ebp+user]
		call	quote
		add	esp, 10h
		mov	esi, eax
		sub	esp, 0Ch
		push	offset aToUseUserIdSYo ; "to use user-ID %s you	need to	use -g to"...
		call	gettext
		add	esp, 10h
		mov	ebx, eax
		call	__errno_location
		mov	eax, [eax]
		push	esi
		push	ebx		; format
		push	eax		; errnum
		push	6Fh		; status
		call	error
		add	esp, 10h
		sub	esp, 0Ch
		push	6Fh		; status
		call	usage
; ---------------------------------------------------------------------------

loc_80005B6:				; CODE XREF: main+326j	main+32Cj ...
		cmp	[ebp+n_gids], 0
		jnz	short loc_8000620
		mov	eax, [ebp+pwd]
		mov	edx, [eax+0Ch]
		mov	eax, [ebp+pwd]
		mov	eax, [eax]
		sub	esp, 4
		lea	ecx, [ebp+gids]
		push	ecx
		push	edx
		push	eax
		call	xgetgroups
		add	esp, 10h
		mov	[ebp+n], eax
		cmp	[ebp+n], 0
		jg	short loc_800061A
		mov	eax, [ebp+pwd]
		mov	eax, [eax]
		sub	esp, 0Ch
		push	eax
		call	quote
		add	esp, 10h
		mov	esi, eax
		sub	esp, 0Ch
		push	offset aFailedToGetGro ; "failed to get	groups for user	%s"
		call	gettext
		add	esp, 10h
		mov	ebx, eax
		call	__errno_location
		mov	eax, [eax]
		push	esi
		push	ebx		; format
		push	eax		; errnum
		push	1		; status
		call	error
		add	esp, 10h

loc_800061A:				; CODE XREF: main+3AEj
		mov	eax, [ebp+n]
		mov	[ebp+n_gids], eax

loc_8000620:				; CODE XREF: main+389j
		mov	eax, [ebp+gids]
		sub	esp, 8
		push	eax		; groups
		push	[ebp+n_gids]	; n
		call	setgroups
		add	esp, 10h
		test	eax, eax
		jz	short loc_800065E
		sub	esp, 0Ch
		push	offset aFailedToSetSup ; "failed to set	supplemental group(s)"
		call	gettext
		add	esp, 10h
		mov	ebx, eax
		call	__errno_location
		mov	eax, [eax]
		sub	esp, 4
		push	ebx		; format
		push	eax		; errnum
		push	6Fh		; status
		call	error
		add	esp, 10h

loc_800065E:				; CODE XREF: main+403j
		mov	eax, [ebp+gids]
		mov	eax, [eax]
		mov	[ebp+primary_gid], eax
		sub	esp, 0Ch
		push	[ebp+primary_gid] ; gid
		call	setgid
		add	esp, 10h
		test	eax, eax
		jz	short loc_80006A0
		sub	esp, 0Ch
		push	offset aCannotSetGroup ; "cannot set group-ID to %lu"
		call	gettext
		add	esp, 10h
		mov	ebx, eax
		call	__errno_location
		mov	eax, [eax]
		push	[ebp+primary_gid]
		push	ebx		; format
		push	eax		; errnum
		push	6Fh		; status
		call	error
		add	esp, 10h

loc_80006A0:				; CODE XREF: main+445j
		sub	esp, 0Ch
		push	[ebp+uid]	; uid
		call	setuid
		add	esp, 10h
		test	eax, eax
		jz	short loc_80006DA
		sub	esp, 0Ch
		push	offset aCannotSetUserI ; "cannot set user-ID to	%lu"
		call	gettext
		add	esp, 10h
		mov	ebx, eax
		call	__errno_location
		mov	eax, [eax]
		push	[ebp+uid]
		push	ebx		; format
		push	eax		; errnum
		push	6Fh		; status
		call	error
		add	esp, 10h

loc_80006DA:				; CODE XREF: main+47Fj
		mov	eax, ds:optind
		add	eax, 1
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+argv]
		add	eax, edx
		mov	[ebp+cmd], eax
		mov	eax, [ebp+cmd]
		mov	eax, [eax]
		sub	esp, 8
		push	[ebp+cmd]	; argv
		push	eax		; file
		call	execvp
		add	esp, 10h
		call	__errno_location
		mov	eax, [eax]
		cmp	eax, 2
		jnz	short loc_8000718
		mov	eax, 7Fh
		jmp	short loc_800071D
; ---------------------------------------------------------------------------

loc_8000718:				; CODE XREF: main+4DEj
		mov	eax, 7Eh

loc_800071D:				; CODE XREF: main+4E5j
		mov	[ebp+exit_status], eax
		mov	eax, [ebp+cmd]
		mov	eax, [eax]
		sub	esp, 0Ch
		push	eax
		call	quote
		add	esp, 10h
		mov	esi, eax
		sub	esp, 0Ch
		push	offset aFailedToRunCom ; "failed to run	command	%s"
		call	gettext
		add	esp, 10h
		mov	ebx, eax
		call	__errno_location
		mov	eax, [eax]
		push	esi
		push	ebx		; format
		push	eax		; errnum
		push	0		; status
		call	error
		add	esp, 10h
		sub	esp, 0Ch
		push	[ebp+exit_status] ; status

loc_800075F:				; DATA XREF: .eh_frame:08000CE4o
					; .eh_frame:08000D04o ...
		call	exit
main		endp

_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_data		segment	byte public 'DATA' use32
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	byte public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rodata		segment	dword public 'CONST' use32
		assume cs:_rodata
		;org 8000768h
; char msgid[]
msgid		db 0Ah			; DATA XREF: emit_ancillary_info+1Do
		db 'Report %s bugs to %s',0Ah,0
aBugCoreutils@g	db 'bug-coreutils@gnu.org',0 ; DATA XREF: emit_ancillary_info+2Do
		align 4
; char aSHomePageHttpW[]
aSHomePageHttpW	db '%s home page: <http://www.gnu.org/software/%s/>',0Ah,0
					; DATA XREF: emit_ancillary_info+3Fo
; char domainname[]
domainname	db 'coreutils',0        ; DATA XREF: emit_ancillary_info+4Fo
					; main+66o ...
aGnuCoreutils	db 'GNU coreutils',0    ; DATA XREF: emit_ancillary_info+54o
					; main+B2o
		align 4
; char aGeneralHelpUsi[]
aGeneralHelpUsi	db 'General help using GNU software: <http://www.gnu.org/gethelp/>',0Ah,0
					; DATA XREF: emit_ancillary_info+6Bo
; char s2[]
s2		db 'en_',0              ; DATA XREF: emit_ancillary_info+A2o
; char aReportSTransla[]
aReportSTransla	db 'Report %s translation bugs to <http://translationproject.org/team'
					; DATA XREF: emit_ancillary_info+CCo
		db '/>',0Ah,0
		align 10h
; char aForCompleteDoc[]
aForCompleteDoc	db 'For complete documentation, run: info coreutils ',27h,'%s invocation'
					; DATA XREF: emit_ancillary_info+FCo
		db 27h,0Ah,0
		align 4
; char aTrySHelpForMor[]
aTrySHelpForMor	db 'Try `%s --help',27h,' for more information.',0Ah,0
					; DATA XREF: usage+14o
		align 4
; char aUsageSShortOpt[]
aUsageSShortOpt	db 'Usage: %s [SHORT-OPTION]... USER COMMAND [ARGUMENT]...',0Ah
					; DATA XREF: usage+4Ao
		db '  or:  %s LONG-OPTION',0Ah,0
		align 4
; char aDropAnySupplem[]
aDropAnySupplem	db 'Drop any supplemental groups, assume the user-ID and group-ID of '
					; DATA XREF: usage+6Eo
		db 'the specified',0Ah
		db 'USER (numeric ID or user name), and run COMMAND with any specifie'
		db 'd ARGUMENTs.',0Ah
		db 'Exit with status 111 if unable to assume the required user and gr'
		db 'oup ID.',0Ah
		db 'Otherwise, exit with the exit status of COMMAND.',0Ah
		db 'This program is useful only when run by root (user ID zero).',0Ah
		db 0Ah,0
		align 4
; char aGGidGid1___Als[]
aGGidGid1___Als	db '  -g GID[,GID1...]  also set the primary group-ID to the numeric '
					; DATA XREF: usage+91o
		db 'GID, and',0Ah
		db '                    (if specified) supplemental group IDs to GID1'
		db ', ...',0Ah,0
		align 4
; char aHelpDisplayThi[]
aHelpDisplayThi	db '      --help     display this help and exit',0Ah,0
					; DATA XREF: usage+B4o
		align 4
; char aVersionOutputV[]
aVersionOutputV	db '      --version  output version information and exit',0Ah,0
					; DATA XREF: usage+D7o
; char locale
locale		db 0			; DATA XREF: main+4Fo main+293o
; char dirname[]
dirname		db '/usr/local/share/locale',0 ; DATA XREF: main+61o
aJimMeyering	db 'Jim Meyering',0     ; DATA XREF: main+A7o
aSetuidgid	db 'setuidgid',0        ; DATA XREF: main+B7o
; char aInvalidGroupS[]
aInvalidGroupS	db 'invalid group %s',0 ; DATA XREF: main+113o main+18Co
; char shortopts[]
shortopts	db '+g:',0              ; DATA XREF: main+1D4o
; char aMissingOperand[]
aMissingOperand	db 'missing operand',0  ; DATA XREF: main+20Eo
; char aMissingOpera_0[]
aMissingOpera_0	db 'missing operand after %s',0 ; DATA XREF: main+251o
; char aUnknownUserIdS[]
aUnknownUserIdS	db 'unknown user-ID: %s',0 ; DATA XREF: main+2F0o
; char aToUseUserIdSYo[]
aToUseUserIdSYo	db 'to use user-ID %s you need to use -g too',0 ; DATA XREF: main+358o
		align 4
; char aFailedToGetGro[]
aFailedToGetGro	db 'failed to get groups for user %s',0 ; DATA XREF: main+3C6o
		align 10h
; char aFailedToSetSup[]
aFailedToSetSup	db 'failed to set supplemental group(s)',0 ; DATA XREF: main+408o
; char aCannotSetGroup[]
aCannotSetGroup	db 'cannot set group-ID to %lu',0 ; DATA XREF: main+44Ao
; char aCannotSetUserI[]
aCannotSetUserI	db 'cannot set user-ID to %lu',0 ; DATA XREF: main+484o
; char aFailedToRunCom[]
aFailedToRunCom	db 'failed to run command %s',0 ; DATA XREF: main+505o
_rodata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'CONST' use32
		assume cs:_eh_frame
		;org 8000CC4h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 2	dup(1Ch)
		dd offset loc_800075F-8001443h
		dd 14h,	80E4100h, 0D420285h, 0CC55005h,	404h, 20h, 3Ch
		dd offset loc_800075F-800144Fh
		dd 11Ch, 80E4100h, 0D420285h, 3834405h,	0C5011403h, 4040CC3h
		dd 1Ch,	60h
		dd offset loc_800075F-8001357h
		dd 101h, 80E4100h, 0D420285h, 3864205h,	483h, 28h, 80h
		dd offset loc_800075F-8001276h
		dd 533h, 10C4400h, 5104700h, 45007502h,	7475030Fh, 2061006h
		dd 3107C75h, 787502h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; extern
		extrn exit_failure:dword ; DATA	XREF: initialize_exit_failure+Cw
		extrn program_name:dword ; DATA	XREF: emit_ancillary_info+7r
					; emit_ancillary_info+B6r ...
		extrn last_component:near ; CODE XREF: emit_ancillary_info+10p
					; emit_ancillary_info+BFp ...
; char *gettext(const char *msgid)
		extrn gettext:near	; CODE XREF: emit_ancillary_info+22p
					; emit_ancillary_info+44p ...
; int printf(const char	*format, ...)
		extrn printf:near	; CODE XREF: emit_ancillary_info+34p
					; emit_ancillary_info+5Ap ...
; struct _IO_FILE *stdout
		extrn stdout:dword	; DATA XREF: emit_ancillary_info+62r
					; usage+65r ...
		extrn fputs_unlocked:near ; CODE XREF: emit_ancillary_info+7Dp
					; usage+80p ...
; char *setlocale(int category,	const char *locale)
		extrn setlocale:near	; CODE XREF: emit_ancillary_info+8Cp
					; main+56p
; int strncmp(const char *s1, const char *s2, size_t n)
		extrn strncmp:near	; CODE XREF: emit_ancillary_info+AAp
; struct _IO_FILE *stderr
		extrn stderr:dword	; DATA XREF: usage+23r
; int fprintf(FILE *stream, const char *format,	...)
		extrn fprintf:near	; CODE XREF: usage+2Ep
; void exit(int	status)
		extrn exit:near		; CODE XREF: usage+FCp
					; main:loc_800075Fp
		extrn set_program_name:near ; CODE XREF: main+44p
; char *bindtextdomain(const char *domainname, const char *dirname)
		extrn bindtextdomain:near ; CODE XREF: main+6Bp
; char *textdomain(const char *domainname)
		extrn textdomain:near	; CODE XREF: main+7Bp
; void close_stdout(void)
		extrn close_stdout	; DATA XREF: main+93o
; int atexit(void (*func)(void))
		extrn atexit:near	; CODE XREF: main+98p
		extrn Version:dword	; DATA XREF: main+A0r
		extrn parse_long_options:near ;	CODE XREF: main+C1p
; char *optarg
		extrn optarg:dword	; DATA XREF: main+DAr
		extrn xstrtoul:near	; CODE XREF: main+F4p main+2A5p
		extrn quote:near	; CODE XREF: main+106p	main+17Fp ...
; void error(int status, int errnum, const char	*format, ...)
		extrn error:near	; CODE XREF: main+126p	main+19Fp ...
		extrn x2nrealloc:near	; CODE XREF: main+143p
; int getopt_long(int argc, char *const	*argv, const char *shortopts, const struct option *longopts, int *longind)
		extrn getopt_long:near	; CODE XREF: main+1DEp
; int optind
		extrn optind:dword	; DATA XREF: main+1F3r	main+1FFr ...
; struct passwd	*getpwnam(const	char *name)
		extrn getpwnam:near	; CODE XREF: main+2CCp
; int *_errno_location(void)
		extrn __errno_location:near ; CODE XREF: main+2FFp main+367p ...
; struct passwd	*getpwuid(__uid_t uid)
		extrn getpwuid:near	; CODE XREF: main+334p
		extrn xgetgroups:near	; CODE XREF: main+39Fp
; int setgroups(size_t n, const	__gid_t	*groups)
		extrn setgroups:near	; CODE XREF: main+3F9p
; int setgid(__gid_t gid)
		extrn setgid:near	; CODE XREF: main+43Bp
; int setuid(__uid_t uid)
		extrn setuid:near	; CODE XREF: main+475p
; int execvp(const char	*file, char *const *argv)
		extrn execvp:near	; CODE XREF: main+4CCp


		end
