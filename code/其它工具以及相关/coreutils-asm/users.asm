;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	      Copyright	(c) 2015 Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-B611-7234-BB			    |
; |		Doskey Lee, Kingsoft Internet Security Software		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	46EE282EC5A1C9C38D65AF744C467DF8
; Input	CRC32 :	8A8B1ECB

; File Name   :	D:\coreutils-o\users.o
; Format      :	ELF for	Intel 386 (Relocatable)
;
; Source File :	'users.c'

		.686p
		.mmx
		.model flat
.intel_syntax noprefix

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	byte public 'CODE' use32
		assume cs:_text
		;org 8000000h
		assume es:nothing, ss:nothing, ds:_text, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: static bp-based frame

; void emit_ancillary_info()
emit_ancillary_info proc near		; CODE XREF: usage+CCp

lc_messages	= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	eax, ds:program_name
		sub	esp, 0Ch
		push	eax
		call	last_component
		add	esp, 10h
		mov	ebx, eax
		sub	esp, 0Ch
		push	offset msgid	; "\nReport %s bugs to %s\n"
		call	gettext
		add	esp, 10h
		sub	esp, 4
		push	offset aBugCoreutils@g ; "bug-coreutils@gnu.org"
		push	ebx
		push	eax		; format
		call	printf
		add	esp, 10h
		sub	esp, 0Ch
		push	offset aSHomePageHttpW ; "%s home page:	<http://www.gnu.org/softw"...
		call	gettext
		add	esp, 10h
		sub	esp, 4
		push	offset domainname ; "coreutils"
		push	offset aGnuCoreutils ; "GNU coreutils"
		push	eax		; format
		call	printf
		add	esp, 10h
		mov	ebx, ds:stdout
		sub	esp, 0Ch
		push	offset aGeneralHelpUsi ; "General help using GNU software: <http:"...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax
		call	fputs_unlocked
		add	esp, 10h
		sub	esp, 8
		push	0		; locale
		push	5		; category
		call	setlocale
		add	esp, 10h
		mov	[ebp+lc_messages], eax
		cmp	[ebp+lc_messages], 0
		jz	short loc_80000E6
		sub	esp, 4
		push	3		; n
		push	offset s2	; "en_"
		push	[ebp+lc_messages] ; s1
		call	strncmp
		add	esp, 10h
		test	eax, eax
		jz	short loc_80000E6
		mov	eax, ds:program_name
		sub	esp, 0Ch
		push	eax
		call	last_component
		add	esp, 10h
		mov	ebx, eax
		sub	esp, 0Ch
		push	offset aReportSTransla ; "Report %s translation	bugs to	<http://t"...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax		; format
		call	printf
		add	esp, 10h

loc_80000E6:				; CODE XREF: emit_ancillary_info+9Bj
					; emit_ancillary_info+B4j
		mov	eax, ds:program_name
		sub	esp, 0Ch
		push	eax
		call	last_component
		add	esp, 10h
		mov	ebx, eax
		sub	esp, 0Ch
		push	offset aForCompleteDoc ; "For complete documentation, run: info	c"...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax		; format
		call	printf
		add	esp, 10h
		nop
		mov	ebx, [ebp+var_4]
		leave
		retn
emit_ancillary_info endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: static bp-based frame

; int __cdecl userid_compare(const void	*v_a, const void *v_b)
userid_compare	proc near		; DATA XREF: list_entries_users+76o

a		= dword	ptr -10h
b		= dword	ptr -0Ch
v_a		= dword	ptr  8
v_b		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+v_a]
		mov	[ebp+a], eax
		mov	eax, [ebp+v_b]
		mov	[ebp+b], eax
		mov	eax, [ebp+b]
		mov	edx, [eax]
		mov	eax, [ebp+a]
		mov	eax, [eax]
		sub	esp, 8
		push	edx		; s2
		push	eax		; s1
		call	strcmp
		add	esp, 10h
		leave
		retn
userid_compare	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: static bp-based frame

; void __cdecl list_entries_users(size_t n, const STRUCT_UTMP *this)
list_entries_users proc	near		; CODE XREF: users+56p

c		= byte ptr -19h
i		= dword	ptr -18h
n_entries	= dword	ptr -14h
u		= dword	ptr -10h
trimmed_name	= dword	ptr -0Ch
n		= dword	ptr  8
this		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		sub	esp, 8
		push	4
		push	[ebp+n]
		call	xnmalloc
		add	esp, 10h
		mov	[ebp+u], eax
		mov	[ebp+n_entries], 0
		jmp	short loc_80001B0
; ---------------------------------------------------------------------------

loc_8000169:				; CODE XREF: list_entries_users+74j
		mov	eax, [ebp+this]
		movzx	eax, byte ptr [eax+2Ch]
		test	al, al
		jz	short loc_80001A9
		mov	eax, [ebp+this]
		movzx	eax, word ptr [eax]
		cmp	ax, 7
		jnz	short loc_80001A9
		sub	esp, 0Ch
		push	[ebp+this]
		call	extract_trimmed_name
		add	esp, 10h
		mov	[ebp+trimmed_name], eax
		mov	eax, [ebp+n_entries]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+u]
		add	edx, eax
		mov	eax, [ebp+trimmed_name]
		mov	[edx], eax
		add	[ebp+n_entries], 1

loc_80001A9:				; CODE XREF: list_entries_users+2Bj
					; list_entries_users+37j
		add	[ebp+this], 180h

loc_80001B0:				; CODE XREF: list_entries_users+20j
		mov	eax, [ebp+n]
		lea	edx, [eax-1]
		mov	[ebp+n], edx
		test	eax, eax
		jnz	short loc_8000169
		push	offset userid_compare ;	compar
		push	4		; size
		push	[ebp+n_entries]	; nmemb
		push	[ebp+u]		; base
		call	qsort
		add	esp, 10h
		mov	[ebp+i], 0
		jmp	short loc_800022D
; ---------------------------------------------------------------------------

loc_80001DB:				; CODE XREF: list_entries_users+ECj
		mov	eax, [ebp+n_entries]
		sub	eax, 1
		cmp	eax, [ebp+i]
		jbe	short loc_80001ED
		mov	eax, 20h
		jmp	short loc_80001F2
; ---------------------------------------------------------------------------

loc_80001ED:				; CODE XREF: list_entries_users+9Dj
		mov	eax, 0Ah

loc_80001F2:				; CODE XREF: list_entries_users+A4j
		mov	[ebp+c], al
		mov	edx, ds:stdout
		mov	eax, [ebp+i]
		lea	ecx, ds:0[eax*4]
		mov	eax, [ebp+u]
		add	eax, ecx
		mov	eax, [eax]
		sub	esp, 8
		push	edx
		push	eax
		call	fputs_unlocked
		add	esp, 10h
		movsx	eax, [ebp+c]
		sub	esp, 0Ch
		push	eax		; c
		call	putchar_unlocked
		add	esp, 10h
		add	[ebp+i], 1

loc_800022D:				; CODE XREF: list_entries_users+92j
		mov	eax, [ebp+i]
		cmp	eax, [ebp+n_entries]
		jb	short loc_80001DB
		mov	[ebp+i], 0
		jmp	short loc_800025F
; ---------------------------------------------------------------------------

loc_800023E:				; CODE XREF: list_entries_users+11Ej
		mov	eax, [ebp+i]
		lea	edx, ds:0[eax*4]
		mov	eax, [ebp+u]
		add	eax, edx
		mov	eax, [eax]
		sub	esp, 0Ch
		push	eax		; ptr
		call	free
		add	esp, 10h
		add	[ebp+i], 1

loc_800025F:				; CODE XREF: list_entries_users+F5j
		mov	eax, [ebp+i]
		cmp	eax, [ebp+n_entries]
		jb	short loc_800023E
		sub	esp, 0Ch
		push	[ebp+u]		; ptr
		call	free
		add	esp, 10h
		nop
		leave
		retn
list_entries_users endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: static bp-based frame

; void __cdecl users(const char	*filename, int options)
users		proc near		; CODE XREF: main+E2p main+105p

filename	= dword	ptr -1Ch
n_users		= dword	ptr -14h
utmp_buf	= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
options		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 28h
		mov	eax, [ebp+arg_0]
		mov	[ebp+filename],	eax
		mov	eax, large gs:14h
		mov	[ebp+var_C], eax
		xor	eax, eax
		push	[ebp+options]
		lea	eax, [ebp+utmp_buf]
		push	eax
		lea	eax, [ebp+n_users]
		push	eax
		push	[ebp+filename]
		call	read_utmp
		add	esp, 10h
		test	eax, eax
		jz	short loc_80002C3
		call	__errno_location
		mov	eax, [eax]
		push	[ebp+filename]
		push	offset format	; "%s"
		push	eax		; errnum
		push	1		; status
		call	error
		add	esp, 10h

loc_80002C3:				; CODE XREF: users+2Fj
		mov	edx, [ebp+utmp_buf]
		mov	eax, [ebp+n_users]
		sub	esp, 8
		push	edx		; this
		push	eax		; n
		call	list_entries_users
		add	esp, 10h
		mov	eax, [ebp+utmp_buf]
		sub	esp, 0Ch
		push	eax		; ptr
		call	free
		add	esp, 10h
		nop
		mov	eax, [ebp+var_C]
		xor	eax, large gs:14h
		jz	short locret_80002F7
		call	__stack_chk_fail
; ---------------------------------------------------------------------------

locret_80002F7:				; CODE XREF: users+78j
		leave
		retn
users		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

; void __cdecl usage(int status)
		public usage
usage		proc near		; CODE XREF: main+BDp main+156p
					; DATA XREF: ...

status		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 4
		cmp	[ebp+status], 0
		jz	short loc_8000336
		mov	ebx, ds:program_name
		sub	esp, 0Ch
		push	offset aTrySHelpForMor ; "Try `%s --help' for more information.\n"
		call	gettext
		add	esp, 10h
		mov	edx, eax
		mov	eax, ds:stderr
		sub	esp, 4
		push	ebx
		push	edx		; format
		push	eax		; stream
		call	fprintf
		add	esp, 10h
		jmp	loc_80003CA
; ---------------------------------------------------------------------------

loc_8000336:				; CODE XREF: usage+Bj
		mov	ebx, ds:program_name
		sub	esp, 0Ch
		push	offset aUsageSOption__ ; "Usage: %s [OPTION]...	[FILE]\n"
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax		; format
		call	printf
		add	esp, 10h
		sub	esp, 0Ch
		push	offset aOutputWhoIsCur ; "Output who is	currently logged in accor"...
		call	gettext
		add	esp, 10h
		sub	esp, 4
		push	offset aVarLogWtmp ; "/var/log/wtmp"
		push	offset filename	; "/var/run/utmp"
		push	eax		; format
		call	printf
		add	esp, 10h
		mov	ebx, ds:stdout
		sub	esp, 0Ch
		push	offset aHelpDisplayThi ; "	--help	   display this	help and "...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax
		call	fputs_unlocked
		add	esp, 10h
		mov	ebx, ds:stdout
		sub	esp, 0Ch
		push	offset aVersionOutputV ; "	--version  output version informa"...
		call	gettext
		add	esp, 10h
		sub	esp, 8
		push	ebx
		push	eax
		call	fputs_unlocked
		add	esp, 10h
		call	emit_ancillary_info

loc_80003CA:				; CODE XREF: usage+38j
		sub	esp, 0Ch
		push	[ebp+status]	; status
		call	exit
usage		endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

; int __cdecl main(int argc, const char	**argv,	const char **envp)
		public main
main		proc near

argc		= dword	ptr  0Ch
argv		= dword	ptr  10h
envp		= dword	ptr  14h

		lea	ecx, [esp+4]
		and	esp, 0FFFFFFF0h
		push	dword ptr [ecx-4]
		push	ebp
		mov	ebp, esp
		push	ebx
		push	ecx
		mov	ebx, ecx
		mov	eax, [ebx+4]
		mov	eax, [eax]
		sub	esp, 0Ch
		push	eax
		call	set_program_name
		add	esp, 10h
		sub	esp, 8
		push	offset shortopts ; locale
		push	6		; category
		call	setlocale
		add	esp, 10h
		sub	esp, 8
		push	offset dirname	; "/usr/local/share/locale"
		push	offset domainname ; "coreutils"
		call	bindtextdomain
		add	esp, 10h
		sub	esp, 0Ch
		push	offset domainname ; "coreutils"
		call	textdomain
		add	esp, 10h
		sub	esp, 0Ch
		push	offset close_stdout ; func
		call	atexit
		add	esp, 10h
		mov	eax, ds:Version
		sub	esp, 0Ch
		push	0
		push	offset aDavidMackenzie ; "David	MacKenzie"
		push	offset aJosephArceneau ; "Joseph Arceneaux"
		push	offset usage
		push	eax
		push	offset aGnuCoreutils ; "GNU coreutils"
		push	offset aUsers	; "users"
		push	dword ptr [ebx+4]
		push	dword ptr [ebx]
		call	parse_long_options
		add	esp, 30h
		sub	esp, 0Ch
		push	0		; longind
		push	0		; longopts
		push	offset shortopts ; shortopts
		push	dword ptr [ebx+4] ; argv
		push	dword ptr [ebx]	; argc
		call	getopt_long
		add	esp, 20h
		cmp	eax, 0FFFFFFFFh
		jz	short loc_8000497
		sub	esp, 0Ch
		push	1		; status
		call	usage
; ---------------------------------------------------------------------------

loc_8000497:				; CODE XREF: main+B6j
		mov	eax, ds:optind
		mov	edx, [ebx]
		sub	edx, eax
		mov	eax, edx
		test	eax, eax
		jz	short loc_80004AD
		cmp	eax, 1
		jz	short loc_80004C1
		jmp	short loc_80004E4
; ---------------------------------------------------------------------------

loc_80004AD:				; CODE XREF: main+CFj
		sub	esp, 8
		push	1		; options
		push	offset filename	; "/var/run/utmp"
		call	users
		add	esp, 10h
		jmp	short loc_8000530
; ---------------------------------------------------------------------------

loc_80004C1:				; CODE XREF: main+D4j
		mov	eax, ds:optind
		lea	edx, ds:0[eax*4]
		mov	eax, [ebx+4]
		add	eax, edx
		mov	eax, [eax]
		sub	esp, 8
		push	0		; options
		push	eax		; filename
		call	users
		add	esp, 10h
		jmp	short loc_8000530
; ---------------------------------------------------------------------------

loc_80004E4:				; CODE XREF: main+D6j
		mov	eax, ds:optind
		add	eax, 1
		lea	edx, ds:0[eax*4]
		mov	eax, [ebx+4]
		add	eax, edx
		mov	eax, [eax]
		sub	esp, 0Ch
		push	eax
		call	quote
		add	esp, 10h
		mov	ebx, eax
		sub	esp, 0Ch
		push	offset aExtraOperandS ;	"extra operand %s"
		call	gettext
		add	esp, 10h
		push	ebx
		push	eax		; format
		push	0		; errnum
		push	0		; status
		call	error
		add	esp, 10h
		sub	esp, 0Ch
		push	1		; status
		call	usage
; ---------------------------------------------------------------------------

loc_8000530:				; CODE XREF: main+EAj main+10Dj
		sub	esp, 0Ch
		push	0		; status

loc_8000535:				; DATA XREF: .eh_frame:08000834o
					; .eh_frame:08000858o ...
		call	exit
main		endp

_text		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_data		segment	byte public 'DATA' use32
_data		ends

; ===========================================================================

; Segment type:	Zero-length
; Segment permissions: Read/Write
_bss		segment	byte public 'BSS' use32
_bss		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rodata		segment	dword public 'CONST' use32
		assume cs:_rodata
		;org 800053Ch
; char msgid[]
msgid		db 0Ah			; DATA XREF: emit_ancillary_info+1Do
		db 'Report %s bugs to %s',0Ah,0
aBugCoreutils@g	db 'bug-coreutils@gnu.org',0 ; DATA XREF: emit_ancillary_info+2Do
		align 4
; char aSHomePageHttpW[]
aSHomePageHttpW	db '%s home page: <http://www.gnu.org/software/%s/>',0Ah,0
					; DATA XREF: emit_ancillary_info+3Fo
; char domainname[]
domainname	db 'coreutils',0        ; DATA XREF: emit_ancillary_info+4Fo
					; main+3Co ...
aGnuCoreutils	db 'GNU coreutils',0    ; DATA XREF: emit_ancillary_info+54o
					; main+83o
		align 4
; char aGeneralHelpUsi[]
aGeneralHelpUsi	db 'General help using GNU software: <http://www.gnu.org/gethelp/>',0Ah,0
					; DATA XREF: emit_ancillary_info+6Bo
; char s2[]
s2		db 'en_',0              ; DATA XREF: emit_ancillary_info+A2o
; char aReportSTransla[]
aReportSTransla	db 'Report %s translation bugs to <http://translationproject.org/team'
					; DATA XREF: emit_ancillary_info+CCo
		db '/>',0Ah,0
		align 4
; char aForCompleteDoc[]
aForCompleteDoc	db 'For complete documentation, run: info coreutils ',27h,'%s invocation'
					; DATA XREF: emit_ancillary_info+FCo
		db 27h,0Ah,0
; char format[]
format		db '%s',0               ; DATA XREF: users+3Bo
; char aTrySHelpForMor[]
aTrySHelpForMor	db 'Try `%s --help',27h,' for more information.',0Ah,0
					; DATA XREF: usage+16o
; char aUsageSOption__[]
aUsageSOption__	db 'Usage: %s [OPTION]... [FILE]',0Ah,0 ; DATA XREF: usage+46o
		align 10h
; char aOutputWhoIsCur[]
aOutputWhoIsCur	db 'Output who is currently logged in according to FILE.',0Ah
					; DATA XREF: usage+63o
		db 'If FILE is not specified, use %s.  %s as FILE is common.',0Ah
		db 0Ah,0
aVarLogWtmp	db '/var/log/wtmp',0    ; DATA XREF: usage+73o
; char filename[]
filename	db '/var/run/utmp',0    ; DATA XREF: usage+78o main+DDo
; char aHelpDisplayThi[]
aHelpDisplayThi	db '      --help     display this help and exit',0Ah,0
					; DATA XREF: usage+8Fo
		align 4
; char aVersionOutputV[]
aVersionOutputV	db '      --version  output version information and exit',0Ah,0
					; DATA XREF: usage+B2o
; char shortopts
shortopts	db 0			; DATA XREF: main+25o main+A1o
; char dirname[]
dirname		db '/usr/local/share/locale',0 ; DATA XREF: main+37o
aDavidMackenzie	db 'David MacKenzie',0  ; DATA XREF: main+73o
aJosephArceneau	db 'Joseph Arceneaux',0 ; DATA XREF: main+78o
aUsers		db 'users',0            ; DATA XREF: main+88o
; char aExtraOperandS[]
aExtraOperandS	db 'extra operand %s',0 ; DATA XREF: main+136o
_rodata		ends

; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_eh_frame	segment	dword public 'CONST' use32
		assume cs:_eh_frame
		;org 8000814h
		dd 14h,	0
		dd 527A01h, 1087C01h, 4040C1Bh,	188h, 20h, 1Ch
		dd offset loc_8000535-8000D69h
		dd 11Ch, 80E4100h, 0D420285h, 3834405h,	0C5011403h, 4040CC3h
		dd 1Ch,	40h
		dd offset loc_8000535-8000C71h
		dd 2Bh,	80E4100h, 0D420285h, 0CC56705h,	404h, 1Ch, 60h
		dd offset loc_8000535-8000C66h
		dd 131h, 80E4100h, 0D420285h, 12D0305h,	4040CC5h, 1Ch
		dd 80h
		dd offset loc_8000535-8000B55h
		dd 81h,	80E4100h, 0D420285h, 0C57D0205h, 4040Ch, 18h, 0A0h
		dd offset loc_8000535-8000AF4h
		dd 0DCh, 80E4100h, 0D420285h, 3834405h,	24h, 0BCh
		dd offset loc_8000535-8000A34h
		dd 165h, 10C4400h, 5104700h, 44007502h,	7875030Fh, 2031006h
		dd 7C75h
_eh_frame	ends

; ===========================================================================

; Segment type:	Externs
; extern
		extrn program_name:dword ; DATA	XREF: emit_ancillary_info+7r
					; emit_ancillary_info+B6r ...
		extrn last_component:near ; CODE XREF: emit_ancillary_info+10p
					; emit_ancillary_info+BFp ...
; char *gettext(const char *msgid)
		extrn gettext:near	; CODE XREF: emit_ancillary_info+22p
					; emit_ancillary_info+44p ...
; int printf(const char	*format, ...)
		extrn printf:near	; CODE XREF: emit_ancillary_info+34p
					; emit_ancillary_info+5Ap ...
; struct _IO_FILE *stdout
		extrn stdout:dword	; DATA XREF: emit_ancillary_info+62r
					; list_entries_users+AEr ...
		extrn fputs_unlocked:near ; CODE XREF: emit_ancillary_info+7Dp
					; list_entries_users+CAp ...
; char *setlocale(int category,	const char *locale)
		extrn setlocale:near	; CODE XREF: emit_ancillary_info+8Cp
					; main+2Cp
; int strncmp(const char *s1, const char *s2, size_t n)
		extrn strncmp:near	; CODE XREF: emit_ancillary_info+AAp
; int strcmp(const char	*s1, const char	*s2)
		extrn strcmp:near	; CODE XREF: userid_compare+21p
		extrn xnmalloc:near	; CODE XREF: list_entries_users+Ep
		extrn extract_trimmed_name:near	; CODE XREF: list_entries_users+3Fp
; void qsort(void *base, size_t	nmemb, size_t size, __compar_fn_t compar)
		extrn qsort:near	; CODE XREF: list_entries_users+83p
; int putchar_unlocked(int c)
		extrn putchar_unlocked:near ; CODE XREF: list_entries_users+DAp
; void free(void *ptr)
		extrn free:near		; CODE XREF: list_entries_users+10Cp
					; list_entries_users+126p ...
		extrn read_utmp:near	; CODE XREF: users+25p
; int *_errno_location(void)
		extrn __errno_location:near ; CODE XREF: users+31p
; void error(int status, int errnum, const char	*format, ...)
		extrn error:near	; CODE XREF: users+43p	main+149p
		extrn __stack_chk_fail:near ; CODE XREF: users+7Ap
; struct _IO_FILE *stderr
		extrn stderr:dword	; DATA XREF: usage+25r
; int fprintf(FILE *stream, const char *format,	...)
		extrn fprintf:near	; CODE XREF: usage+30p
; void exit(int	status)
		extrn exit:near		; CODE XREF: usage+D7p
					; main:loc_8000535p
		extrn set_program_name:near ; CODE XREF: main+1Ap
; char *bindtextdomain(const char *domainname, const char *dirname)
		extrn bindtextdomain:near ; CODE XREF: main+41p
; char *textdomain(const char *domainname)
		extrn textdomain:near	; CODE XREF: main+51p
; void close_stdout(void)
		extrn close_stdout	; DATA XREF: main+5Co
; int atexit(void (*func)(void))
		extrn atexit:near	; CODE XREF: main+61p
		extrn Version:dword	; DATA XREF: main+69r
		extrn parse_long_options:near ;	CODE XREF: main+92p
; int getopt_long(int argc, char *const	*argv, const char *shortopts, const struct option *longopts, int *longind)
		extrn getopt_long:near	; CODE XREF: main+ABp
; int optind
		extrn optind:dword	; DATA XREF: main:loc_8000497r
					; main:loc_80004C1r ...
		extrn quote:near	; CODE XREF: main+129p


		end
